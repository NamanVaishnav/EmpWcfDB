//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace EmpWcfDB.EmpReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    public partial class Employee : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Emp_IDField;
        
        private string Emp_NameField;
        
        private string Emp_SalaryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Emp_ID {
            get {
                return this.Emp_IDField;
            }
            set {
                if ((this.Emp_IDField.Equals(value) != true)) {
                    this.Emp_IDField = value;
                    this.RaisePropertyChanged("Emp_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emp_Name {
            get {
                return this.Emp_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Emp_NameField, value) != true)) {
                    this.Emp_NameField = value;
                    this.RaisePropertyChanged("Emp_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Emp_Salary {
            get {
                return this.Emp_SalaryField;
            }
            set {
                if ((object.ReferenceEquals(this.Emp_SalaryField, value) != true)) {
                    this.Emp_SalaryField = value;
                    this.RaisePropertyChanged("Emp_Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmpReference1.IEmpService")]
    public interface IEmpService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmpService/AddEmployee", ReplyAction="http://tempuri.org/IEmpService/AddEmployeeResponse")]
        System.IAsyncResult BeginAddEmployee(EmpWcfDB.EmpReference1.Employee emp, System.AsyncCallback callback, object asyncState);
        
        void EndAddEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmpService/FindEmployee", ReplyAction="http://tempuri.org/IEmpService/FindEmployeeResponse")]
        System.IAsyncResult BeginFindEmployee(int empid, System.AsyncCallback callback, object asyncState);
        
        EmpWcfDB.EmpReference1.Employee EndFindEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmpService/UpdateEmployee", ReplyAction="http://tempuri.org/IEmpService/UpdateEmployeeResponse")]
        System.IAsyncResult BeginUpdateEmployee(int empid, EmpWcfDB.EmpReference1.Employee emp, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmpService/DeleteEmployee", ReplyAction="http://tempuri.org/IEmpService/DeleteEmployeeResponse")]
        System.IAsyncResult BeginDeleteEmployee(int empid, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEmpService/GetEmployees", ReplyAction="http://tempuri.org/IEmpService/GetEmployeesResponse")]
        System.IAsyncResult BeginGetEmployees(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<EmpWcfDB.EmpReference1.Employee> EndGetEmployees(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpServiceChannel : EmpWcfDB.EmpReference1.IEmpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EmpWcfDB.EmpReference1.Employee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EmpWcfDB.EmpReference1.Employee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<EmpWcfDB.EmpReference1.Employee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<EmpWcfDB.EmpReference1.Employee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpServiceClient : System.ServiceModel.ClientBase<EmpWcfDB.EmpReference1.IEmpService>, EmpWcfDB.EmpReference1.IEmpService {
        
        private BeginOperationDelegate onBeginAddEmployeeDelegate;
        
        private EndOperationDelegate onEndAddEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onAddEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindEmployeeDelegate;
        
        private EndOperationDelegate onEndFindEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onFindEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEmployeeDelegate;
        
        private EndOperationDelegate onEndUpdateEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEmployeeDelegate;
        
        private EndOperationDelegate onEndDeleteEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeesDelegate;
        
        private EndOperationDelegate onEndGetEmployeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public EmpServiceClient() {
        }
        
        public EmpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddEmployeeCompleted;
        
        public event System.EventHandler<FindEmployeeCompletedEventArgs> FindEmployeeCompleted;
        
        public event System.EventHandler<UpdateEmployeeCompletedEventArgs> UpdateEmployeeCompleted;
        
        public event System.EventHandler<DeleteEmployeeCompletedEventArgs> DeleteEmployeeCompleted;
        
        public event System.EventHandler<GetEmployeesCompletedEventArgs> GetEmployeesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EmpWcfDB.EmpReference1.IEmpService.BeginAddEmployee(EmpWcfDB.EmpReference1.Employee emp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEmployee(emp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void EmpWcfDB.EmpReference1.IEmpService.EndAddEmployee(System.IAsyncResult result) {
            base.Channel.EndAddEmployee(result);
        }
        
        private System.IAsyncResult OnBeginAddEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EmpWcfDB.EmpReference1.Employee emp = ((EmpWcfDB.EmpReference1.Employee)(inValues[0]));
            return ((EmpWcfDB.EmpReference1.IEmpService)(this)).BeginAddEmployee(emp, callback, asyncState);
        }
        
        private object[] OnEndAddEmployee(System.IAsyncResult result) {
            ((EmpWcfDB.EmpReference1.IEmpService)(this)).EndAddEmployee(result);
            return null;
        }
        
        private void OnAddEmployeeCompleted(object state) {
            if ((this.AddEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEmployeeAsync(EmpWcfDB.EmpReference1.Employee emp) {
            this.AddEmployeeAsync(emp, null);
        }
        
        public void AddEmployeeAsync(EmpWcfDB.EmpReference1.Employee emp, object userState) {
            if ((this.onBeginAddEmployeeDelegate == null)) {
                this.onBeginAddEmployeeDelegate = new BeginOperationDelegate(this.OnBeginAddEmployee);
            }
            if ((this.onEndAddEmployeeDelegate == null)) {
                this.onEndAddEmployeeDelegate = new EndOperationDelegate(this.OnEndAddEmployee);
            }
            if ((this.onAddEmployeeCompletedDelegate == null)) {
                this.onAddEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginAddEmployeeDelegate, new object[] {
                        emp}, this.onEndAddEmployeeDelegate, this.onAddEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EmpWcfDB.EmpReference1.IEmpService.BeginFindEmployee(int empid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindEmployee(empid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        EmpWcfDB.EmpReference1.Employee EmpWcfDB.EmpReference1.IEmpService.EndFindEmployee(System.IAsyncResult result) {
            return base.Channel.EndFindEmployee(result);
        }
        
        private System.IAsyncResult OnBeginFindEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int empid = ((int)(inValues[0]));
            return ((EmpWcfDB.EmpReference1.IEmpService)(this)).BeginFindEmployee(empid, callback, asyncState);
        }
        
        private object[] OnEndFindEmployee(System.IAsyncResult result) {
            EmpWcfDB.EmpReference1.Employee retVal = ((EmpWcfDB.EmpReference1.IEmpService)(this)).EndFindEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindEmployeeCompleted(object state) {
            if ((this.FindEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindEmployeeCompleted(this, new FindEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindEmployeeAsync(int empid) {
            this.FindEmployeeAsync(empid, null);
        }
        
        public void FindEmployeeAsync(int empid, object userState) {
            if ((this.onBeginFindEmployeeDelegate == null)) {
                this.onBeginFindEmployeeDelegate = new BeginOperationDelegate(this.OnBeginFindEmployee);
            }
            if ((this.onEndFindEmployeeDelegate == null)) {
                this.onEndFindEmployeeDelegate = new EndOperationDelegate(this.OnEndFindEmployee);
            }
            if ((this.onFindEmployeeCompletedDelegate == null)) {
                this.onFindEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginFindEmployeeDelegate, new object[] {
                        empid}, this.onEndFindEmployeeDelegate, this.onFindEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EmpWcfDB.EmpReference1.IEmpService.BeginUpdateEmployee(int empid, EmpWcfDB.EmpReference1.Employee emp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEmployee(empid, emp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EmpWcfDB.EmpReference1.IEmpService.EndUpdateEmployee(System.IAsyncResult result) {
            return base.Channel.EndUpdateEmployee(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int empid = ((int)(inValues[0]));
            EmpWcfDB.EmpReference1.Employee emp = ((EmpWcfDB.EmpReference1.Employee)(inValues[1]));
            return ((EmpWcfDB.EmpReference1.IEmpService)(this)).BeginUpdateEmployee(empid, emp, callback, asyncState);
        }
        
        private object[] OnEndUpdateEmployee(System.IAsyncResult result) {
            bool retVal = ((EmpWcfDB.EmpReference1.IEmpService)(this)).EndUpdateEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEmployeeCompleted(object state) {
            if ((this.UpdateEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEmployeeCompleted(this, new UpdateEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEmployeeAsync(int empid, EmpWcfDB.EmpReference1.Employee emp) {
            this.UpdateEmployeeAsync(empid, emp, null);
        }
        
        public void UpdateEmployeeAsync(int empid, EmpWcfDB.EmpReference1.Employee emp, object userState) {
            if ((this.onBeginUpdateEmployeeDelegate == null)) {
                this.onBeginUpdateEmployeeDelegate = new BeginOperationDelegate(this.OnBeginUpdateEmployee);
            }
            if ((this.onEndUpdateEmployeeDelegate == null)) {
                this.onEndUpdateEmployeeDelegate = new EndOperationDelegate(this.OnEndUpdateEmployee);
            }
            if ((this.onUpdateEmployeeCompletedDelegate == null)) {
                this.onUpdateEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEmployeeDelegate, new object[] {
                        empid,
                        emp}, this.onEndUpdateEmployeeDelegate, this.onUpdateEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EmpWcfDB.EmpReference1.IEmpService.BeginDeleteEmployee(int empid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEmployee(empid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool EmpWcfDB.EmpReference1.IEmpService.EndDeleteEmployee(System.IAsyncResult result) {
            return base.Channel.EndDeleteEmployee(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int empid = ((int)(inValues[0]));
            return ((EmpWcfDB.EmpReference1.IEmpService)(this)).BeginDeleteEmployee(empid, callback, asyncState);
        }
        
        private object[] OnEndDeleteEmployee(System.IAsyncResult result) {
            bool retVal = ((EmpWcfDB.EmpReference1.IEmpService)(this)).EndDeleteEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteEmployeeCompleted(object state) {
            if ((this.DeleteEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEmployeeCompleted(this, new DeleteEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEmployeeAsync(int empid) {
            this.DeleteEmployeeAsync(empid, null);
        }
        
        public void DeleteEmployeeAsync(int empid, object userState) {
            if ((this.onBeginDeleteEmployeeDelegate == null)) {
                this.onBeginDeleteEmployeeDelegate = new BeginOperationDelegate(this.OnBeginDeleteEmployee);
            }
            if ((this.onEndDeleteEmployeeDelegate == null)) {
                this.onEndDeleteEmployeeDelegate = new EndOperationDelegate(this.OnEndDeleteEmployee);
            }
            if ((this.onDeleteEmployeeCompletedDelegate == null)) {
                this.onDeleteEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEmployeeDelegate, new object[] {
                        empid}, this.onEndDeleteEmployeeDelegate, this.onDeleteEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult EmpWcfDB.EmpReference1.IEmpService.BeginGetEmployees(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployees(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<EmpWcfDB.EmpReference1.Employee> EmpWcfDB.EmpReference1.IEmpService.EndGetEmployees(System.IAsyncResult result) {
            return base.Channel.EndGetEmployees(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((EmpWcfDB.EmpReference1.IEmpService)(this)).BeginGetEmployees(callback, asyncState);
        }
        
        private object[] OnEndGetEmployees(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<EmpWcfDB.EmpReference1.Employee> retVal = ((EmpWcfDB.EmpReference1.IEmpService)(this)).EndGetEmployees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeesCompleted(object state) {
            if ((this.GetEmployeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeesCompleted(this, new GetEmployeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeesAsync() {
            this.GetEmployeesAsync(null);
        }
        
        public void GetEmployeesAsync(object userState) {
            if ((this.onBeginGetEmployeesDelegate == null)) {
                this.onBeginGetEmployeesDelegate = new BeginOperationDelegate(this.OnBeginGetEmployees);
            }
            if ((this.onEndGetEmployeesDelegate == null)) {
                this.onEndGetEmployeesDelegate = new EndOperationDelegate(this.OnEndGetEmployees);
            }
            if ((this.onGetEmployeesCompletedDelegate == null)) {
                this.onGetEmployeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeesDelegate, null, this.onEndGetEmployeesDelegate, this.onGetEmployeesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override EmpWcfDB.EmpReference1.IEmpService CreateChannel() {
            return new EmpServiceClientChannel(this);
        }
        
        private class EmpServiceClientChannel : ChannelBase<EmpWcfDB.EmpReference1.IEmpService>, EmpWcfDB.EmpReference1.IEmpService {
            
            public EmpServiceClientChannel(System.ServiceModel.ClientBase<EmpWcfDB.EmpReference1.IEmpService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddEmployee(EmpWcfDB.EmpReference1.Employee emp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = emp;
                System.IAsyncResult _result = base.BeginInvoke("AddEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddEmployee", _args, result);
            }
            
            public System.IAsyncResult BeginFindEmployee(int empid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = empid;
                System.IAsyncResult _result = base.BeginInvoke("FindEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public EmpWcfDB.EmpReference1.Employee EndFindEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                EmpWcfDB.EmpReference1.Employee _result = ((EmpWcfDB.EmpReference1.Employee)(base.EndInvoke("FindEmployee", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateEmployee(int empid, EmpWcfDB.EmpReference1.Employee emp, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = empid;
                _args[1] = emp;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateEmployee", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteEmployee(int empid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = empid;
                System.IAsyncResult _result = base.BeginInvoke("DeleteEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteEmployee", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEmployees(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetEmployees", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<EmpWcfDB.EmpReference1.Employee> EndGetEmployees(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<EmpWcfDB.EmpReference1.Employee> _result = ((System.Collections.ObjectModel.ObservableCollection<EmpWcfDB.EmpReference1.Employee>)(base.EndInvoke("GetEmployees", _args, result)));
                return _result;
            }
        }
    }
}
